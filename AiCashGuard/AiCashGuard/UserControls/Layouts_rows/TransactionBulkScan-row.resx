<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Remove_Action.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EAAACxABrSO9dQAAA1hJREFUaEPtmV1P2lAYx/0OC3VXi5tbdAylUEDeEZD3dz2gxs/oxeaSLdmWqMu+
        yOStUqCU7KanybMewtmFirSlQMj4JecGUs7v357nKT3dWLNmzX/An9J5eVg8r0uFs7qUr5XHH5tOh4uU
        eUe4zrOhetsWNGceqXiBVHk8LJzBMH8KUramiOnaxfhr0+DZCOLZML5nw8Dvh6BtCyhtm3+2eR7KD3M1
        EgAG6aoaApkW4qE8vxcE3haAltWrtK1eY/NMkpcyVZDSCMTksSImKzOHmCTf/uCD9nsvNHc9SmPHrW+e
        8ZqfKD9IncAgeQxiooLFo3JtfJhu7p3R2nPyrd0DaO14oPnWhRvbXGl82HRIwU6THyQqoMpDP17CYrSg
        O4RW+dY7NwkAzTeO3+NDpyMVTu+0yIvxEoixIvSiBV0hdMtvO6GxxeoIoLZKKVfDWuT70QL0DwvQC+dx
        N5ydGsKIfH2LxWoA7UuIIKWraJCpYi3y/UheDZCDbjCj9PzpiQU3rWCflH/NKo1XdoOdSA0hpk6wFvle
        KAu9QAYEX1LpeZOPJly4PKWfqKBxt5kq3/WnoOtLQufgSOm44/8mXpo8pR8rolG30SAveBMgeI6g44qN
        QixdnkK6DOk2WuQFd5wEgHvHITZSsPUtu+F7y7P0IznUi+RlLfId56EaIAJLP/MPEYI51A1l5ZWUpwi+
        NBL8KXkl5SmCL4E63oS8kvIUwRNDaqeRV1KewnMxpHYbeSXlCUb6/J0qf8Xs/bx8seyzb1D+E7P/69Ji
        h48Wu3K1rBCzy7Pw2eKAr4xD+cY4FxvCPHkn/GA4uNnklBtG52OjUcyXd8HtaCwgxPzkFxDCiDxpldrl
        6eDw9abb3D9zRuVJn7+07CG128ja5Okw8UrMIj/+iY0rC4u+MA5ZmzwdJoQwQ57y3cKh602X/LTspDFD
        CDPlKbcvOaRegfmHGO0S65XX+CRFCpQU6tOykwaHbxgdO3Nki3se8hRDIRhO+8YWz4bu5iVP0R1CTwDy
        cqFtC+B5yVO0h9C5hAi81YdaVi82WrBaIYX9fIgZOlHT6kHNHQ+elzxlcggT7gVqAKSK43nJUx6HMEGe
        Ql4ukP15ssWte5dYB2Sdk2IlQ/eaX7NmzSqysfEXLsRzLCmBWyQAAAAASUVORK5CYII=
</value>
  </data>
  <data name="CheckImage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>