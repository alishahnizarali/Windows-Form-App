<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Remove_Action.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAANYSURBVGhD7ZldT9pQGMf9Dgt1V4ubW3QMpVBA3hGQ93c9
        oMbP6MXmki3ZlqjLvsjkrVKglOymp8mzHsLZhYq0pUDI+CXnBlLO79+e5yk93VizZs1/wJ/SeXlYPK9L
        hbO6lK+Vxx+bToeLlHlHuM6zoXrbFjRnHql4gVR5PCycwTB/ClK2pojp2sX4a9Pg2Qji2TC+Z8PA74eg
        bQsobZt/tnkeyg9zNRIABumqGgKZFuKhPL8XBN4WgJbVq7StXmPzTJKXMlWQ0gjE5LEiJiszh5gk3/7g
        g/Z7LzR3PUpjx61vnvGanyg/SJ3AIHkMYqKCxaNybXyYbu6d0dpz8q3dA2jteKD51oUb21xpfNh0SMFO
        kx8kKqDKQz9ewmK0oDuEVvnWOzcJAM03jt/jQ6cjFU7vtMiL8RKIsSL0ogVdIXTLbzuhscXqCKC2SilX
        w1rk+9EC9A8L0AvncTecnRrCiHx9i8VqAO1LiCClq2iQqWIt8v1IXg2Qg24wo/T86YkFN61gn5R/zSqN
        V3aDnUgNIaZOsBb5XigLvUAGBF9S6XmTjyZcuDyln6igcbeZKt/1p6DrS0Ln4EjpuOP/Jl6aPKUfK6JR
        t9EgL3gTIHiOoOOKjUIsXZ5CugzpNlrkBXecBIB7xyE2UrD1Lbvhe8uz9CM51IvkZS3yHeehGiACSz/z
        DxGCOdQNZeWVlKcIvjQS/Cl5JeUpgi+BOt6EvJLyFMETQ2qnkVdSnsJzMaR2G3kl5QlG+vydKn/F7P28
        fLHss29Q/hOz/+vSYoePFrtytawQs8uz8NnigK+MQ/nGOBcbwjx5J/xgOLjZ5JQbRudjo1HMl3fB7Wgs
        IMT85BcQwog8aZXa5eng8PWm29w/c0blSZ+/tOwhtdvI2uTpMPFKzCI//omNKwuLvjAOWZs8HSaEMEOe
        8t3CoetNl/y07KQxQwgz5Sm3LzmkXoH5hxjtEuuV1/gkRQqUFOrTspMGh28YHTtzZIt7HvIUQyEYTvvG
        Fs+G7uYlT9EdQk8A8nKhbQvgeclTtIfQuYQIvNWHWlYvNlqwWiGF/XyIGTpR0+pBzR0Pnpc8ZXIIE+4F
        agCkiuN5yVMehzBBnkJeLpD9ebLFrXuXWAdknZNiJUP3ml+zZs0qsrHxFy7EcywpgVskAAAAAElFTkSu
        QmCC
</value>
  </data>
  <data name="CheckImage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAU4AAACXCAMAAABNy0IIAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAADVUExURf///77f9sXo/xzPfOPx+9Tp+TMyMmBhcBuxafn5+UFBQZycnL29vd3d3XNzczIyMc3N
        zYmJiQAAABESE1Zkb/Pz8+jo6MfHx2RkZNbW1isrK5CQkO7u7mlpaeTk5NPT01VVVXt7e7W1tYODg6Ki
        om1/jElVXhoaGpaWllxcXKurq7i4uG5ubnh4eKGhoT4+PktLSx8fH6/N4hzBdFBQUBl9TTs3NHuPnUBK
        URNKLQcvHRqXXEM4P6XB1ZGqvGN0gDkoNDEqLiNBLVlOVC0TIBgFEgsZEriwB20AAAnISURBVHhe7Z0N
        f6LGFofPZlsbEAxgeJMBEWgF1EQ3abt9uXu77e39/h/pnjOwmjWySXSuG+t5fj9d/oxx5XGAYWAQAGp9
        1GMOY/RTiSaJ6vrdmwvmQN59P9LIZn198YY5nIuf56RTf9dm5jAuHKqeI5r8ljkM0vk+QZ09XNe/pWrK
        HMA3qPMHgRNXrFMBpPOaNp6sUwVS5y8T1qkG0vnd5a8h61RCo/O3nHUqodF59zvrVEKj8+1H1qmEVmeP
        db4IAa7vQmIm1GSnRwvr3AOR265u6OKmDHSA0qF2ewPr3AOziEwDbgwIK4BxnrPOw0hsAH8JkA1KSGHh
        trNZ536YNuQl2gTQjeX8tpJdnATr3AfTDkdFlAzKOsAUe81chHXug+a5Zhi6MPYpbWyyTrWwTqWwTqWw
        TqWwTqWwTqWwTqWwTqWwTqWwTqWwTqWwTqWwTqWwTqWwTqWwTqWwTqWwTqWco07fUozZvvF56sxtxdTt
        G/PKrhjWqRTW+VJ8Q54NNj0IDd83NHyEsoBgnS/E1a1aFwDLAMazoJ9pIyOz2jLW+WLcACBcgFUM0GmE
        +3S9LZCwzhdCOmEJAy0sAWxczUdBKtd+Cet8IaRTBLAKgl6jU4f1BV+s88W4qTDvzcIAKA2psycSvr5z
        bzTbLj3oY40UNRgebj/tPGvLWKdiWKdSWKdSWKdSWKdSWKdSOnTOyhsNkhlYJmgZuFG/H2mJbSfYUChx
        WswAfHdclpsmwkmRrFvepj48FKd6st0Zu+MB2PegLWVTVdS1MAPXDdCn8PsCYoBc9C2xeaNTwnXG7ZQ2
        /Vd7x54D+HDbvlunzjkkc8jHGRi2Tdk3UB+ARyHEKlmF4VwUfrIZoHRKjJ1Pa5X/b1zsQ7l4vx670aXT
        jrTMni0BGvOGIcd2iQlOhzXAMssqUUTFpqfvdEhund5w1XRb+N+r0PnDUzpxZYZ0bC1MSGVGnX6Eh/zU
        s0c653JlfzBU9nTQVrfGtNAd+eGPpBPVJWjNKyCX2UKPszjGPRBuvfHwH8tvhBHEn+64dkIYjq85oefI
        ZTmSzn8wmePDelfEOg9FOKP+kHUqw7pyelNq8iHH0un61C4y8T81Tdyle/jsms3VDp6PMxLTfNAJfWJY
        02A6lAqOpNOYG5Magtou3TQb1FAVhZnlNe3mi9yILdDrYv0eJ0aIzXgzdJr29HF03uMjoOZS5eJ/G1DD
        CDITFgIETS7ljNOkN5VHRasBhePolM31vjdfVJZAnaU3nwdiFgTYLhrfYNEA9LiSrzw9aicXTlg0B0ZH
        qp14OIQN+BgfApuYaVs7qQukPTFK7fwTJXeGvZXTrF5H0hlWN4EPFfilu+zjVJDjAfxYo22AMb+pTFz/
        TxezXOVtS+lIOnH/3fyjgSb34M1zw/qPTxU8KmqnxErB7bPfTdt369QZDxaDTr5Q9CqZb67SaNA2rZLM
        uT6Y9UFBp07zH8WXemW19jUH0L4T0bmyM/vAOpXCOpXCOpXCOpXCOpXCOpXCOp/FLNXz55wEZ53PIQ8S
        LRs+4xoN1vkMTOpgA+MZfbys8xkUzUUjQ/kM09EWq0VTgLDOp3GjWnie5zpPbz1Z59Os4jggBqPtrqlH
        sM6nWXdnllJnO4ideFRdz1an1lxMmVD3GlmRZqiT3JUF4wfd5aSzTnFGo3MzHD5/1JF+tjoju1+5sCjr
        SvMiFClPbEZpYwuqLN00i0hnNF3r/BLnq1NAkvs11s9clKiTzt3CIvLoGrfUw331pnqSTpN0s85OUBzM
        C1rVq7VOw0gisCfzAopUXtXQQDpdOoHR6LSjz/jsIsJz1uk9rJ104WUwmeiQuxUkHtTygkXJlJpJiMil
        Tn8L+ZqW89UZ9VMXBiXuY7xlaWu3ZRSi0szItTDXllm12c3ksplEPDwttJOz1dnu2T0yJISHDyG3li4+
        Y8meV6l36JwZZ8/mjhQvoENn2T979hoydbYr+/8H1qkU1qkU1qkU1qkU1qkU1qkU1qkU1qkU1qkU1qkU
        1qkU1qmUDp1yPK2naUliuprsSKU5prU5gcLsYrdOzzFp4Hdo3kZ2aDkoMXRcqOxa36sX8Hzo0LlcAJS6
        aUYYrGUfYL7U5JU6PVnOdNChM48F3PfDRM8XrlUvwRtMtIrO7OdPni45azp0TsZlZvRDc+GZ4Be1YZtz
        bUDb0Ac/ns08pkPnAFIdotCk06V+H/QKYjescMU/1WHXR2K3TlGCUUNtelVQWWEGfR8iF11WD07mMzvY
        rZPZkw6d2qug/TCPactfDe3H6tR5pb8CRl0+xah9xSthtN4/88quFNapFNapFNapFNapFNapFNapFNap
        lE6dbtg0otv72qxjc9/LrtJPcfdwOzmIB49p2uJ94m7C5lN9fbp0zoaxY+HC6KlO90czhvHQbyL1KbUR
        NtGR8X75MG4T6OktareceEjX8XdH6qeOt+KtjI+ZjsEdBb0FQG81Gjk0q3QMWfQV6NCpOS54+NnsCGBe
        PyMKjJHdRiHjNnXcvMTx5F9QLHOMiYzZVsQvcSv2qbdwi8xxQsjxY6yo8ro98ji+Hez6Mo9Ch06fqqQe
        Qg/XIpxeR/zQFKkO6uMmVk1cNtGqwKKbpt5vbiT2iQAXMhlBSHeix+l4R7wCU0ZDRm/VxBgjevLWYyMf
        Uo3plyxgig+zqZVDsXhtOjOqCYEFNHQuTGFGg5hwmVe4HQuXYNAA7jlGgcvQRlz+aRvpxaRji3tcYncI
        Ft2rcjKDNMQ4BYu+qTwjLaANYUxfjZ1BitF1mu5qLJUv3lHj6e72+ORWNHTfXIywnsYZvM7aiRXuimon
        1r82ysq6iVSKCyzjvQUjimlTWTFu86l20g9LYm3bEb2tOG3ivK2s7fD8zyGdvlPjFO2yHNd0ipv7r1Y9
        O3S6jia3f3kfYFB8FhdNpLqSlzJqMmpgU7xZx22KQbP9w00rLjbUj+MN1msZBdRY3dYRSzEWVOsfgTrH
        siePNrH4UlEUxf3ka52/7tAJ9XQyxC2RNopTuhFGVwwqilkbrzZxMwRvw30a04Ibw8mKahNFNNAR0yb6
        zmRVULyPaUvzGFxJ5qvlbc+Cephf4cqO7NjSHIkuneDRnc4Rq9mnvCiKNm4zbiqN8Jvu1nCP+AgXVwXR
        DFnzfNzatPO+Ep06mX1gnUphnUphnUphnUphnUpZ6+yxTgWsdY5Q55tvmMOg3ziQOn+Sv3fAHMzFH3d3
        H6FU8esTzJuLD3++vfwLYPRz+xMSzCF8+M/l2x/7ANrceX99ff0dcwh//Hn59u5v2VmjJd78l0vmEO7e
        vr37rzwpIJn8+hvOYfbl7vLHvzc2AcL89x6zNx//6rsA8D8fJIV/gutqfAAAAABJRU5ErkJggg==
</value>
  </data>
</root>